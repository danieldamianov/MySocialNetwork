@model SocialNetwork.Models.Home.PostHomeIndexViewModel

<div style="display:none" class="postId">@Model.PostId</div>

<div class="col-8" style="word-wrap: break-word; margin-top:100px; border:solid ;border-radius: 25px; border-color:darkgray">
    <div class="text-secondary" align="left">
        <partial name="_LinkToProfile" model="new LinkToProfileViewModel(Model.UserId,Model.UserProfilePicturePath,Model.Username,50)" />
        <h4>@Model.Description</h4>

        <!-- Container for the image gallery -->
        <div class="postImagesAndVideosGallery">
            @for (int i = 0; i < Model.PhotosPaths.Count; i++)
            {
                <div class="@(Model.PostId)image">
                    <div class="numbertext"><div class="btn btn-secondary">@(i + 1) / @Model.PhotosPaths.Count</div></div>
                    <img src="@Model.PhotosPaths[i]" style="width:100%">
                </div>
            }

            <!-- Next and previous buttons -->
            <a class="prev" onclick="plusSlides(-1,'@Model.PostId')">&#10094;</a>
            <a class="next" onclick="plusSlides(1,'@Model.PostId')">&#10095;</a>

            <!-- Image text -->
            <div class="caption-container">
                <p id="caption"></p>
            </div>
        </div>

        <h5>@Model.TimeSinceCreated</h5>
        <br />
    </div>
    <div>
        @{
            var likeOrUnlikeButtonPath = "fas fa-thumbs-down";
            if (Model.HasCurrentUserLikedThePost == false)
            {
                likeOrUnlikeButtonPath = "fas fa-thumbs-up";
            }
        }

        <div style="margin-bottom:20px">
            <button class="bg-transparent" onclick="userLikedOrUnlikedPost('@(Model.LogedIdUserId)','@(Model.PostId)')">
                <i style="font-size:20px" id="@(Model.PostId)image" class="@likeOrUnlikeButtonPath"></i>
            </button>
            <button id="@(Model.PostId)likesButton" @*class="dropbtn"*@ onclick="showModalWindowForLikesOfPost('@Model.PostId')">
                <strong id="@(Model.PostId)likesCount">@Model.UsersLikedThePost.Count</strong>
                <strong>likes</strong>
            </button>
        </div>

        <div id="@(Model.PostId)likesModalWindow" class="modal">
            <div class="modal-content">
                <span id="@(Model.PostId)likesModalWindowClose" class="close">&times;</span>
                <div id="@(Model.PostId)usersLikedThePostExtendetView">
                    @foreach (var user in Model.UsersLikedThePost)
                    {
                        <partial name="_LinkToProfile" model="new LinkToProfileViewModel(user.Id,user.Avatar,user.UserName,40)" />
                    }
                </div>
            </div>
        </div>

        <div>

            <button onclick="showOrHideCommentsSection('@Model.PostId')">
                <i class="fas fa-comments"></i><strong id="@(Model.PostId)commentsCount"> @Model.Comments.Count </strong>
            </button>


            <button id="@(Model.PostId)buttonForShowingOrHidingTheAddCommentSection" style="margin:5px" onclick="showOrHideAddCommentSection('@Model.PostId')"><i class="fas fa-comment-medical"></i></button>
        </div>
    </div>

    @{
        var partialViewForComment = await Html.PartialAsync("_LinkToProfile", new LinkToProfileViewModel(Model.LogedIdUserId, Model.UserProfilePicturePath, Model.Username, 40));
    }
    <div id="@(Model.PostId)addCommentSection" class="col-4" style="margin:10px;display:none">
        <div style="margin : 5px">
            <input width="60" type="text" name="comment" class="form-control" id="@(Model.PostId)addCommentField" style="font-family:sans-serif;font-size:1.2em;">
        </div>
        <button class="form-control btn btn-secondary" value="Add Comment"
                onclick="addComment('@(Model.LogedIdUserId)', '@(Model.PostId)', jQuery('#@(Model.PostId)addCommentField').val())">
            Comment
        </button>
    </div>
    <div style="display:none" id="@(Model.PostId)commentsSection" class="col-5">
        @foreach (var comment in Model.Comments)
        {
            <partial name="_LinkToProfile" model="new LinkToProfileViewModel(comment.UserId,comment.UserAvatar,comment.Username,40)" />
            <p style="word-wrap: break-word;">@comment.Content</p>
        }
    </div>
</div>


<script>
    var slideIndex = 1;
    var postsIds = document.getElementsByClassName('postId');
    initialDisplayPhoto(postsIds[postsIds.length - 1].innerHTML)
    function initialDisplayPhoto(postId) {
        slideIndex = 1;
        showSlides(slideIndex, postId);
    }
    // Next/previous controls
    function plusSlides(n, postId) {
        showSlides(slideIndex += n, postId);
    }

    function showSlides(n, postId) {
        var i;
        var slides = document.getElementsByClassName(postId + "image");
        if (n > slides.length) { slideIndex = 1 }
        if (n < 1) { slideIndex = slides.length }
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }

        slides[slideIndex - 1].style.display = "block";
    }
</script>

<style>
    * {
        box-sizing: border-box;
    }

    /* Position the image container (needed to position the left and right arrows) */
    .postImagesAndVideosGallery {
        position: relative;
    }

    /* Hide the images by default */
    .mySlides {
        display: none;
    }

    /* Add a pointer when hovering over the thumbnail images */
    .cursor {
        cursor: pointer;
    }

    /* Next & previous buttons */
    .prev,
    .next {
        cursor: pointer;
        position: absolute;
        top: 500px;
        width: auto;
        padding: 16px;
        margin-top: -50px;
        color: black;
        font-weight: bold;
        font-size: 20px;
        border-radius: 0 3px 3px 0;
        user-select: none;
        -webkit-user-select: none;
    }

    /* Position the "next button" to the right */
    .next {
        right: 0;
        border-radius: 3px 0 0 3px;
    }

        /* On hover, add a black background color with a little bit see-through */
        .prev:hover,
        .next:hover {
            background-color: rgba(0, 0, 0, 0.8);
        }

    /* Number text (1/3 etc) */
    .numbertext {
        color: #f2f2f2;
        font-size: 12px;
        padding: 8px 12px;
        position: absolute;
        top: 0;
    }

    /* Container for image text */
    .caption-container {
        text-align: center;
        background-color: #222;
        padding: 2px 16px;
        color: white;
    }

    .row:after {
        content: "";
        display: table;
        clear: both;
    }

    /* Six columns side by side */
    .column {
        float: left;
        width: 16.66%;
    }

    /* Add a transparency effect for thumnbail images */
    .demo {
        opacity: 0.6;
    }

        .active,
        .demo:hover {
            opacity: 1;
        }
</style>
